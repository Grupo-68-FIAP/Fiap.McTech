name: SonarCloud analysis
on:
  push:
    branches: [ master, develop ]
    paths-ignore: [ '**/*.md', '.github/workflows/*', '!.github/workflows/sonarcloud.yml']
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore: [ '**/*.md', '.github/workflows/*', '!.github/workflows/sonarcloud.yml']
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool update --global dotnet-sonarscanner
          dotnet tool update --global dotnet-coverageconverter

      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          Get-ChildItem -Path . -Force
          dotnet sonarscanner begin /k:"Grupo-68-FIAP_Fiap.McTech" /o:"grupo-68-fiap" /d:sonar.token="$env:SONAR_TOKEN" /dproject.settings="sonar-project.properties" /d:sonar.projectSettings="sonar-project.properties"
          dotnet test "Fiap.McTech.sln" --collect "Code Coverage" --logger trx --results-directory "TestsResults"
          dotnet-coverageconverter -f "." -p true -r
          dotnet sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"
